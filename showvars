#!/bin/bash
# Kaiwan NB, kaiwanTECH
name=$(basename $0)
PFX=$(dirname "$(which "$0")")    # dir in which the common code and tools reside
source "${PFX}"/common || {
  echo "${name}: could not source 'common' script, aborting..." ; exit 1
}
setup_env -q

disp_bbvars()
{
local RUN_DO_FILE=$(realpath ${1})
[[ -z "${RUN_DO_FILE}" || ! -f ${RUN_DO_FILE} ]] && {
	echo "couldn't get a WORKDIR/temp/run.do_<foo> file"
	[[ ${TRY} -eq 2 ]] && exit 1 || return 1
}
echo "WORKDIR           = ${WORKDIR}
run.do_<foo> file = ${RUN_DO_FILE}
---------------------------------------------------------------------------------"
echo "For recipe \"$1\", checking within it's run.do_<foo> file for bitbake variables therein
---------------------------------------------------------------------------------"
grep "^export" ${RUN_DO_FILE} |cut -d' ' -f2-
[[ $? -ne 0 ]] && {
	echo "No bitbake variables present here?"
	[[ ${TRY} -eq 2 ]] && exit 1 || return 1
}
return 0
}


#--- 'main'
[ $# -ne 1 ] && {
	echo "Usage: ${name} recipe-name
Tip: use
	bitbake-layers show-recipes
	bitbake-layers show-appends
to get recipe names.

F.e.
build_qemuarm64 $ bitbake-layers show-recipes | grep -B1 autotools-helloworld
bbexample:                      ### <--- the recipe name here's 'bbexample'  ###
  meta-autotools-helloworld 1.0
"
	exit 1
}
RECIPE="$1"

WORKDIR=$(bitbake -e ${RECIPE} 2>/dev/null |grep -w "^WORKDIR" | awk -F'=' '{print $2}' |cut -d"\"" -f2) || true
[ -z "${WORKDIR}" ] && failit "Couldn't get WORKDIR for recipe \"${RECIPE}\""

# Find a run.do_<foo> file under WORKDIR/temp
TRY=1
RUN_DO_FILE=$(ls -1 ${WORKDIR}/temp/run.do_* |head -n1) || true
set +e
disp_bbvars ${RUN_DO_FILE}
[[ $? -ne 0 ]] && {
	echo "
>>> Retrying via other approach...
^^^ !NOTE! this usually necessitates that the 'buildhistory' feature is turned on ^^^
"
	TRY=2
	NEW_RUN_DO_FILE=$(find ${WORKDIR} -type f 2>/dev/null |xargs grep -H "^export" 2>/dev/null |head -n1 |cut -d: -f1)
	disp_bbvars ${NEW_RUN_DO_FILE}
}
exit 0
